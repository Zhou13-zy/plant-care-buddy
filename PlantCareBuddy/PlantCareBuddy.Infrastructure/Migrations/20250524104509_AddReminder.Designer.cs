// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlantCareBuddy.Infrastructure.Persistence;

#nullable disable

namespace PlantCareBuddy.Infrastructure.Migrations
{
    [DbContext(typeof(PlantCareBuddyContext))]
    [Migration("20250524104509_AddReminder")]
    partial class AddReminder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlantCareBuddy.Domain.Entities.CareEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AfterImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BeforeImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("PlantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("CareEvents");
                });

            modelBuilder.Entity("PlantCareBuddy.Domain.Entities.HealthObservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HealthStatus")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ObservationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PlantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("HealthObservations");
                });

            modelBuilder.Entity("PlantCareBuddy.Domain.Entities.Plant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HealthStatus")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NextHealthCheckDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("PlantType")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryImagePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("PlantCareBuddy.Domain.Entities.Reminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Intensity")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStrategyOverride")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastStrategyAdjustment")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PlantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StrategyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StrategyParameters")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DueDate");

                    b.HasIndex("IsCompleted");

                    b.HasIndex("PlantId");

                    b.HasIndex("StrategyId");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("PlantCareBuddy.Domain.Entities.CareEvent", b =>
                {
                    b.HasOne("PlantCareBuddy.Domain.Entities.Plant", "Plant")
                        .WithMany("CareEvents")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("PlantCareBuddy.Domain.Entities.HealthObservation", b =>
                {
                    b.HasOne("PlantCareBuddy.Domain.Entities.Plant", "Plant")
                        .WithMany("HealthObservations")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("PlantCareBuddy.Domain.Entities.Reminder", b =>
                {
                    b.HasOne("PlantCareBuddy.Domain.Entities.Plant", "Plant")
                        .WithMany("Reminders")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PlantCareBuddy.Domain.ValueObjects.RecurrencePattern", "Recurrence", b1 =>
                        {
                            b1.Property<Guid>("ReminderId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int?>("DayOfMonth")
                                .HasColumnType("int");

                            b1.Property<string>("DaysOfWeek")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("EndDate")
                                .HasColumnType("datetime2");

                            b1.Property<int>("Interval")
                                .HasColumnType("int");

                            b1.Property<int?>("OccurrenceCount")
                                .HasColumnType("int");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("ReminderId");

                            b1.ToTable("Reminders");

                            b1.WithOwner()
                                .HasForeignKey("ReminderId");
                        });

                    b.Navigation("Plant");

                    b.Navigation("Recurrence")
                        .IsRequired();
                });

            modelBuilder.Entity("PlantCareBuddy.Domain.Entities.Plant", b =>
                {
                    b.Navigation("CareEvents");

                    b.Navigation("HealthObservations");

                    b.Navigation("Reminders");
                });
#pragma warning restore 612, 618
        }
    }
}
